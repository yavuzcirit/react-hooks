{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/01-starting-project/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useRef } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { useEffect } from 'react/cjs/react.development';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const ctx = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  useEffect(() => {\n    console.log('Effect Running');\n    return () => {\n      console.log('Effect Cleanup');\n    };\n  }, []);\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking for validity\");\n      setFormIsValid(enteredEmail.includes('@') && enteredPassword.trim().length > 6);\n    }, 2000);\n    return () => {\n      console.log('Clean Up!');\n      clearTimeout(identifier);\n    };\n  }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(event.target.value.trim().length > 6 && enteredEmail.includes('@'));\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6 && enteredPassword === \"yavuzcirit23\");\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      ctx.onLogin(enteredEmail, enteredPassword);\n    } else if (!emailIsValid) {\n      emailInputRef.current.focus();\n    } else {\n      passwordInputRef.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: emailInputRef,\n        id: \"email\",\n        label: \"E-mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: enteredEmail,\n        onChange: emailChangeHandler,\n        onBLur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: passwordInputRef,\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: enteredPassword,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"26iF6iCrL4HxcAVucFnimvp2B1w=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/mac/Desktop/01-starting-project/src/components/Login/Login.js"],"names":["React","useState","useContext","useRef","Card","classes","Button","useEffect","AuthContext","Input","Login","props","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","ctx","emailInputRef","passwordInputRef","console","log","identifier","setTimeout","includes","trim","length","clearTimeout","emailChangeHandler","event","target","value","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","current","focus","login","actions","btn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,MAAtC,QAAmD,OAAnD;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,EAAhD;AACA,QAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACiB,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,EAAtD;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMqB,GAAG,GAAGpB,UAAU,CAACM,WAAD,CAAtB;AAEA,QAAMe,aAAa,GAACpB,MAAM,EAA1B;AACA,QAAMqB,gBAAgB,GAACrB,MAAM,EAA7B;AAEAI,EAAAA,SAAS,CAAC,MAAI;AACZkB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,WAAO,MAAM;AACXD,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,KAFD;AAGD,GANQ,EAMP,EANO,CAAT;AAQAnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,UAAU,GAAGC,UAAU,CAAC,MAAI;AAClCH,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAL,MAAAA,cAAc,CACVT,YAAY,CAACiB,QAAb,CAAsB,GAAtB,KAA8Bb,eAAe,CAACc,IAAhB,GAAuBC,MAAvB,GAAgC,CADpD,CAAd;AAGA,KAL6B,EAK5B,IAL4B,CAA7B;AAOA,WAAO,MAAM;AACXN,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAM,MAAAA,YAAY,CAACL,UAAD,CAAZ;AACD,KAHD;AAID,GAZQ,EAYN,CAACf,YAAD,EAAcI,eAAd,CAZM,CAAT;;AAeA,QAAMiB,kBAAkB,GAAIC,KAAD,IAAW;AACpCrB,IAAAA,eAAe,CAACqB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAIA,QAAMC,qBAAqB,GAAIH,KAAD,IAAW;AACvCjB,IAAAA,kBAAkB,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AAEAf,IAAAA,cAAc,CACZa,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBN,IAAnB,GAA0BC,MAA1B,GAAmC,CAAnC,IAAwCnB,YAAY,CAACiB,QAAb,CAAsB,GAAtB,CAD5B,CAAd;AAGD,GAND;;AAQA,QAAMS,oBAAoB,GAAG,MAAM;AACjCvB,IAAAA,eAAe,CAACH,YAAY,CAACiB,QAAb,CAAsB,GAAtB,CAAD,CAAf;AACD,GAFD;;AAIA,QAAMU,uBAAuB,GAAG,MAAM;AACpCpB,IAAAA,kBAAkB,CAACH,eAAe,CAACc,IAAhB,GAAuBC,MAAvB,GAAgC,CAAhC,IAAqCf,eAAe,KAAG,cAAxD,CAAlB;AACD,GAFD;;AAIA,QAAMwB,aAAa,GAAIN,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACO,cAAN;;AACA,QAAIrB,WAAJ,EAAiB;AACfE,MAAAA,GAAG,CAACoB,OAAJ,CAAY9B,YAAZ,EAA0BI,eAA1B;AACD,KAFD,MAEO,IAAG,CAACF,YAAJ,EAAkB;AACvBS,MAAAA,aAAa,CAACoB,OAAd,CAAsBC,KAAtB;AACD,KAFM,MAEA;AACLpB,MAAAA,gBAAgB,CAACmB,OAAjB,CAAyBC,KAAzB;AACD;AACF,GATD;;AAWA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEvC,OAAO,CAACwC,KAAzB;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEL,aAAhB;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,GAAG,EAAEjB,aAAZ;AAA2B,QAAA,EAAE,EAAC,OAA9B;AAAsC,QAAA,KAAK,EAAC,QAA5C;AAAqD,QAAA,IAAI,EAAC,OAA1D;AAAkE,QAAA,OAAO,EAAET,YAA3E;AAAyF,QAAA,KAAK,EAAEF,YAAhG;AAA8G,QAAA,QAAQ,EAAEqB,kBAAxH;AAA4I,QAAA,MAAM,EAAEK;AAApJ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,GAAG,EAAEd,gBAAZ;AAA8B,QAAA,EAAE,EAAC,UAAjC;AAA4C,QAAA,KAAK,EAAC,UAAlD;AAA6D,QAAA,IAAI,EAAC,UAAlE;AAA6E,QAAA,OAAO,EAAEN,eAAtF;AAAuG,QAAA,KAAK,EAAEF,eAA9G;AAA+H,QAAA,QAAQ,EAAEqB,qBAAzI;AAAgK,QAAA,MAAM,EAAEE;AAAxK;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAElC,OAAO,CAACyC,OAAxB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAEzC,OAAO,CAAC0C,GAAzC;AAA8C,UAAA,QAAQ,EAAE,CAAC3B,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA/ED;;GAAMV,K;;KAAAA,K;AAiFN,eAAeA,KAAf","sourcesContent":["import React, { useState ,useContext, useRef} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { useEffect } from 'react/cjs/react.development';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input';\n\nconst Login = (props) => {\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const ctx = useContext(AuthContext)\n\n  const emailInputRef=useRef()\n  const passwordInputRef=useRef()\n\n  useEffect(()=>{\n    console.log('Effect Running')\n\n    return () => {\n      console.log('Effect Cleanup')\n    }\n  },[])\n\n  useEffect(() => {\n    const identifier = setTimeout(()=>{\n    console.log(\"Checking for validity\")\n    setFormIsValid(\n        enteredEmail.includes('@') && enteredPassword.trim().length > 6\n      )\n   },2000)\n\n    return () => {\n      console.log('Clean Up!')\n      clearTimeout(identifier)\n    }\n  }, [enteredEmail,enteredPassword])\n  \n\n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    setFormIsValid(\n      event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    );\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6 && enteredPassword===\"yavuzcirit23\")\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (formIsValid) {\n      ctx.onLogin(enteredEmail, enteredPassword);\n    } else if(!emailIsValid) {\n      emailInputRef.current.focus()\n    } else {\n      passwordInputRef.current.focus()\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input ref={emailInputRef} id=\"email\" label=\"E-mail\" type=\"email\" isValid={emailIsValid} value={enteredEmail} onChange={emailChangeHandler} onBLur={validateEmailHandler}/>\n        <Input ref={passwordInputRef} id=\"password\" label=\"Password\" type=\"password\" isValid={passwordIsValid} value={enteredPassword} onChange={passwordChangeHandler} onBlur={validatePasswordHandler} />\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}