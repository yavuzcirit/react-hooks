{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/01-starting-project/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedin: false,\n  onLogout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedin,\n      logoutHandler,\n      loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AuthContextProvider, \"KevDNrCXvtsbrnrIN4+rjR7PIn4=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/mac/Desktop/01-starting-project/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","isLoggedin","onLogout","AuthContextProvider","props","isLoggedIn","setIsLoggedIn","logoutHandler","loginHandler","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,UAAU,EAAE,KAD0B;AAEtCC,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAFoB,CAApB,CAApB;AAKA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA6BR,QAAQ,CAAC,KAAD,CAA3C;;AAEA,QAAMS,aAAa,GAAG,MAAM;AAC1BD,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA,QAAME,YAAY,GAAG,MAAM;AACzBF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAIA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACL,MAAAA,UAAD;AAAYM,MAAAA,aAAZ;AAA0BC,MAAAA;AAA1B,KAA7B;AAAA,cAAuEJ,KAAK,CAACK;AAA7E;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAZM;;GAAMN,mB;;KAAAA,mB;AAcb,eAAeJ,WAAf","sourcesContent":["import React,{ useState } from 'react';\n\nconst AuthContext = React.createContext({\n  isLoggedin: false,\n  onLogout: () => {}\n});\n\nexport const AuthContextProvider = (props) => {\n  const [isLoggedIn,setIsLoggedIn] = useState(false)\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false)\n  }\n\n  const loginHandler = () => {\n    setIsLoggedIn(true)\n  }\n\n  return <AuthContext.Provider value={{isLoggedin,logoutHandler,loginHandler}}>{props.children}</AuthContext.Provider>\n}\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}